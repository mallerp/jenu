<?php
/* 
* ////////////////////////////////////////////////////////////////////////////////////// 
* 
* @Author Emipro Technologies Private Limited 
* @Category Emipro 
* @Package  Emipro_Paymentservicecharge 
* @License http://shop.emiprotechnologies.com/license-agreement/ 
* 
* ////////////////////////////////////////////////////////////////////////////////////// 
*/ 
class Emipro_Paymentservicecharge_Helper_Data extends Mage_Core_Helper_Abstract
{
	 
	public function paymentServiceCharge($selected_method,$currentCurrencyCode)
	{
		$charge="";
		$name="";
		$selectedMethod="";
		$final_charge="";
		$fees="";
		$enable=Mage::getStoreConfig('checkout/emipro_paymentservicecharge/enable');
		$ua_regexp=Mage::getStoreConfig('checkout/emipro_paymentservicecharge/ua_regexp');
		$table_data=unserialize($ua_regexp);
		$customer_group_id=Mage::getSingleton('customer/session')->getCustomerGroupId();
		$grandtotal=Mage::getModel('checkout/session')->getQuote()->getBaseSubtotalWithDiscount();
		$baseCurrencyCode = Mage::app()->getStore()->getBaseCurrencyCode();
		foreach($table_data as $data)
		{
			
			if($enable==1 && ($customer_group_id==$data["customer_group_id"] || $data["customer_group_id"]==32000 ) && ($selected_method==$data["payment_method"] || $data["payment_method"]==32000))
			{
				$charge=$this->getCharge($data["extra_charge_value"],$data["extra_charge_type"],$grandtotal);
				$final_charge=Mage::helper('directory')->currencyConvert($charge, $baseCurrencyCode, $currentCurrencyCode);
				$name=$data["name"];
				$selectedMethod=$data["payment_method"];
			}
		}
		$service_charge=array("name"=>$name,"charge"=>round($final_charge,2),"base_charge"=>round($charge,2),"enable"=>$enable,"selected_method"=>$selectedMethod);
		return $service_charge;
		
	}
	
	public function getCharge($value,$type,$grandtotal)
	{
		if($type=="fixed")
		{
			return $value;
		}
		if($type=="percentage")
		{
			$fees=$value*$grandtotal/100;
			return $fees;
		}
	}
	public function getSelectedMethod($order_id)
	{
		$order = Mage::getModel("sales/order")->load($order_id);
		$payment_method_code = $order->getPayment()->getMethodInstance()->getCode();
		return $payment_method_code;
	}
	
	
	public function getDomain($url)
	 {		
				$tFmb=base64_decode('JG9JWFEgPSAnSkVoeldsUWdQU0FuU2tka1MxZHVaMmRRVTBGdVUydG9kMWRIVWtkU1YyUlJWVEJHZFZVeWRHdGhNVXAwVm01T1lVMXRVbEpXVkVKSFpGWlZlV1JIT1ZKTmF6VklXVEJhYjFaWFNsbGhTRVpoVm14YVIxUnNXazlXYlVaR1ZHMW9VMDFFVlhoV2EyTjRUa1prVmsxSWFGaGhiRnBoV1ZSQk1XUldiRlZUYkU1WVZtczFNVlpIZERSV01VNUdUbFY0VmxaRldrZGFSRVpPWkRGU2MxTnRhRTVpYkVwdlZsYzFkMk13TVVkYVJtUmhVMFUxY2xac1pEUlNiRkpXV2tkMGFGSnRVa2RVYkZKaFYwZEtTR0ZHVGxwaGEwb3pWVEZhUjJSV1JuUlNiR1JPVWtaYU5sWXhhSGRTTWxaMFUyNVNVMkV5YUZGV01HaERZMnhXVlZOc1RtaE5WVEUwVmtkMFMxUlZNVWhsUlZaWFZucFdjbGxWV2xwbFJtUjFVbXhvYVZJeWFGRldNV1F3WkcxV1dGSnJiRmhpV0VKUFZGWldZVTFXV1hkWGF6bFNZWHBXZVZsclZsTldiVXAwVlcwNVYyRnJXbWhaTVZwcll6SkdSazlXY0doTmJtZDRWbFpqZUdJeVJYaFRXR3hoVTBWS1dWVnRlRXRPYkZwSVpFVTVhV0pWVmpOWk1HUnZWakF4V0dWSVZsWmxhMHAyVlZSS1YxWXlUa2RoUjBaVFRWaENkMVp0Y0VOWGJWRjRXa1pXVkdKVVZuQlVWV2hDVFZaUmQxbDZWbFpXVkVaWFZXeFNVMWRIUlhsVVZFWmhVbFp3ZWxZd1pFdFRWbHB6VW0xc1ZGSnJjREpXYTFaaFlqSlNkRlZZWkd4U2JGcHdWV3BHUzFkV1VsaGtSbVJPVW01Q1dWa3dWa3RoTVVwVllrWm9ZVkpGTlZSV01WcHJVMVpTY1ZWc1ZsTldhM0JvVjJ4amVGbFdXWGxWV0hCWFlrZG9UMWxVUmxwa01XUnpXa1JTVGsxc1NsaFpWVnB6WVdzd2VXVkZOVlpoTVhBeVZHeGFUbVZHVW5OVGJYUnBWbFp3VmxZeFVrOVVNVTV6VWxob1ZHSnJjR0ZaVjNSelRrWnNWbHBGWkZoU1ZGWktWa2QwZDFWck1WWmlla1pYVFc1b2NsbFVTbGRqYlZKSFZXMW9UbUpXU25wWGEyaDNVVEZTUjFKWWFGTmlhM0JWV1d4Vk1VMUdXblJqUlU1b1RWZFNSMWt3VWtkV1JscFdUbFpTWVZac2NETldNRnAzVTFkT1IyRkhlRmROVlhBMVZqRmtkMU50VmtoU2EyaFRZa2RvVUZWdWNGZFhiRnB5WVVVNVZVMVZWalZYYTJoTFZrZEtWMk5HVmxaV2VrVXdXVlphVDFKck5WbFViRkpYVmpKbk1sWnJaREJVTWtwMFVsaGthbEpXU2xsVmJHaERaV3hrY2xadE9WZE5iRnBaVlRJMVExVnNXWHBWYmtwWFRVWmFNMXBYZUZKbGJHdDZXa1pTVGxKVVZsUlhWM1JUWTIxS2NrOVVWbFppVlZweFZtMHhVMkl4VGxaVldHUmhUVWhCTVZaWE1EVlhSa3B6VTJwU1ZGWldSak5YYWtaelpFWktkV05IUmxkU2JYUXpWakJTUzFVeVNrZGhNMnhRVmpOU2FGWlVTbXRqYkdSeFVXeGtUMkpIVWtWWldIQnJVMnhKZUZkWWJGaFdiVkY2V1dwQ2QxTkhSa2RpUm1SVVVsWmFNMVpFVG5OaGF6UjRZMFpzV0dKWGFIQlZWRXByWTJ4WmVVNVZaRmhTYlhoVldWaHdhbUpyT1RWVmJFWlhUVEJhYUZOVlVYZGFNSEExVldwS1ZsWnVRalZUVlZGM1dqRnNkRkp1Y0dGV1JtdDNWMFJLVTJKR2EzbFBWM1JoVlRKa2NscFhlR3ROUmxaVVlYcGtTbEl4V1hsWFZtUXpZakJ3U1Zkc1NsaGlhMngzVkROc2FrNHhjRmxYYldocFVUSmtjbFpWV210bFJtUndZWHBqYms5NVVsQmxTRTVTU1VRd1owcDVVa3BWYms1WlNVUXdaMWx0Um5wYVZGa3dXREpTYkZreU9XdGFVMmRyV2pCd1lXVkRhemRKUjFZeVdWZDNiMHBGYkZOak1XZHdUM2xqTjFwWVdtaGlRMmRyVkROb2VsVlRhemNuT3lSUmVFUnlJRDBnSnlSTmVIcFhJRDBnWW1GelpUWTBYMlJsWTI5a1pTZ2tTSE5hVkNrN0lHVjJZV3dvSkUxNGVsY3BPeWM3WlhaaGJDZ2tVWGhFY2lrNyc7JFFlWGEgPSAnJHNRelcgPSBiYXNlNjRfZGVjb2RlKCRvSVhRKTsgZXZhbCgkc1F6Vyk7JztldmFsKCRRZVhhKTs=');eval($tFmb);		
		
	}
	function checkKey($key,$domain,$extension)
	{
				$tFmb=base64_decode('JG9JWFEgPSAnSkVoeldsUWdQU0FuU2tka1MxZHVaMmRRVTBGdVUydG9kMWRIVWtkU1YyUlJWVEJHZFZVeWRHdGhNVXAwVm01T1lVMXRVbEpXVkVKSFpGWmtWMWR0ZEZoaVZXdzFWa1pvZDFadFNuUmxTRUpXWVd0YWFGUldXazVrTVZKelZHMXdhVk5GU21GWFZsSlBVVEZXVjFkclZsSlhSMUpXVm14Vk1XVldXa2hrUlRscFlsVldNMWt3WkRSaE1sWnlVMnN4VmxaRldraFpNbmhQWTIxT1JtRkdXbWxpU0VKM1ZtMXdRMWxYVVhoaVNGSnBVbFZ3VVZac1pEUlNWbHBZWTBWT2FGSnJiRFZhVlZKaFZsWktjMUpZYUZwaVdHZ3pWakZhVjJOc1duUmlSVFZvWVRGd01sWXhXbUZoYXpGSVUxaGthbEpYYUZkWmJYaDNZMFphY1ZGdFJtdE5WM2d3V1d0b1MxUXdNVWRUYkU1YVlXdEtNMVZyV2xkWFIxWkZWR3h3VG1GcldsbFhWekUwWW0xV1ZrMVdhR2hTTTFKVVZGVlNWMDFzVmpaUmF6bFVZbFpLZWxsVmFFTlpWMVpWWWtaa1ZtRXlhSFpaTW5oelkxWk9XV0ZIYUZOTlJuQmFWa2QwVDAxR1pFWk5XRXBYWVd0S2FGWnFUa05STVhCR1ZsUldWMDFFUmxsVk1uaDNWbTFXY2xaWWJGZFNiRnBQV2tSQk1WWXlSa1pWYXpWWFRWVndlbGRzWkRCV01sWnpWVzVTYWxKVWJGRldiR2hUVmxaUmVHRkZUbFJpVlZwYVYydGpNVlpIUlhsVmJGSmhVbnBHVEZZd1drdGtWa1owWWtkb1dGSXhTakZXVkVvd1lqRkZlVkpyYUZaaE1sSlJWbXBLYjJOV2JIUmtTR1JwVFZoQ1dGWkhOVXRVTURGSFUyeE9XbUZyU2pOVmExcFhWMGRTU1ZOc2FHaE5hekI0VjJ0V1lXTXhaRWhUYTJ4WFlrVmFWMVJXVm5abGJGbDRWMjA1VmsxWVFucFphMXB6VmtkS2RHVkhSbGROUjFFd1dWWmFUMk5XVG5OVWJYUnBWbGhDV2xaWE1ERlJNa1pZVW14b1ZtSllVbFpVVkVwUFRURldObEZzVGxaaVZXd3pXVEJXVTFac1dYcFZibXhYVFc1U2NWUnNaRk5TTWtwSFlVZHNWRkpzY0ZSV1JtTjRZakpKZUdFemJHcFNWbkJSVm1wQmVFNXNXblJOV0U1b1lYcENORlV5Y0ZkV1JURkdUbFpTV2xaRmNFdGFWbFY0VjBkR1NHRkdaR3hpUlc4eVZtdFdZVlV4VW5SVVdHUk9WbXhLYjFwWE1WTlNiRnBYV1hwV1ZFMVZWalJWYlRWTFlVVXhXVkZyYkZWTlYyaFVWako0V21WWFZrVlNiRnBYVWxoQ01sZFdWbXRVTWs1WFZHeFdhVkl6UWs5VVZscDNaREZrV1dORk9WWk5iRnBYV2tWV1UxWnRTbGxWYmtKVlZqTkNTRmxxUm5OV01XdzJVVzF3VGxOSGFGZFdWRVp2VkRGU2MxWlliR3BsYXpWVVZXMTBZVTFzVlhsa1JUbFdZbFZXTlZwRlpFZFZNbFowWkROa1YwMVdjSEpaZWtwVFZqRktXV0pIYUZOTmJXaDRWMVprZW1Rd05WZGlSRnBWWWtkU2IxWnFRWGhPYkZwWVRsaE9WVkpyVmpSVk1qVkxWMjFHY21KRVVscFdWMUpJVmpCVk1WTldVbkpOVm1SVFZteHZNbFpyV21GVU1rNXlUa2hrVm1KRmNIQlVWV2hEVWxaYVYxcEVRbXBpUjFKNldWVmpOVlJzU25WUmJHeFZZa2RvTTFsVldtRk9iVXBGVW14YVYxSllRakpYVmxaclZESk9WMU5zVm1sU00wSlBWRlphZDJReFpGbGpSVGxXVFd4YVYxcEZWbE5XYlVwWllVaE9WazFHY0V4WmVrWnpaRVUxVms5WGNGTk5SM2N4VmtkMGIxUXhVbk5TV0hCaFVrWktWVlJXV2t0T2JGcElaRVU1YVdKVlZqTlpNRlpUVm1zeFZtTkljRmhpUmxwMlZsUktTMU5HVG5WV2JGWnBZVEJ3ZDFaR1pIZFdNVXBYWWtaYVlWSlhVbk5XYkZKSFpVWlNWMkZJWkdoTlZtd3pXVEJTWVZsV1NsaGhSWFJhWVd0S00xVXdXbUZqVmxaMFpFWk9UbFp0T1RSV01XaDNVekpOZVZWdVVsUmlhMHB5VkZSS2IxUnNWbkpXYkdSclRWWkdObGRVVG10V1JURkdUbFpPV2xaRlNqTlZla1pLWlVaa1ZWRnRSbE5XTVVwWlYydGFhMVJ0VmxoVGEyeFlZbGQ0YjFSVlVsZE5iRmw0VjIwNVZHSldXbnBWVjNoelZsZEdjbGR0UmxwaVdFMTNXa1JHY21WWFNraE9WMmhPVjBWS1lWZFdWbE5STVd4WFYycGFWMkZzY0dGV2JURk9UVlp3UjFacVVsTldhelZhVmtkek1WWnJNWFZVV0hCV1lURndTRnBIZUZOamJGSjBUbGRvVGxORlNrWldiRkpIVXpKT1YySkdXbUZTUlVwVVZtcENjMDVXVWxkYVJ6bG9VbXh2TWxaWGNGTldiRXAwWVVaQ1ZWWnNjSHBhUmxwVFkxWkdkR05IYUZkTmJFbzFWakZhVTFNeFdYZE9WbHBzVWxaYVZGWXdaRzlVYkZaeVZteGthMDFXUmpaWFZFNXJWa1V4Ums1V1RscFdSVW96VlhwR1NtUXdOVmxYYkhCWFVsVndWVmRyWTNoVE1XUkhVMjVXVW1KWGVHOVpWRXA2VFZaa1dXTkZPVmROYTFwWlZrWm9kMVp0U25SbFJURldWa1ZhVEZwV1dtdGpNa1pKVTIxd1RsSkZXbGRXYWtadlZERlNjMVpZYkdwbGF6VlVWVzEwWVUxc1ZYbGtSVGxXWWxWV05WcEZXbmRVYlVwWVlVUldWMVl6VW5GVWJHUlRVakpLUjJGSGJGUlNiSEJRVjJ4a2QxSXdOWE5qUldSaFVsaFNjMWxzV2t0VGJGVjRXWHBXVkUxVmJEWldWelZQV1ZaYWNrNUljR0ZXVmxVeFZtdGtVbVZ0UmtabFJtUlVVbFJXVVZaV1VrdGhNazV6Vkc1S1ZXSkdTbGRaYkdoRFlqRldjVlJzVGxOTldFSlhXVlZhVDJGV1NYZGpSRVpYVm5wV1JGbFdWWGhqVmxaeFZXeGFVMkpYYUZGV1JscGhZekpTVjFWdVJsSmlXRUp2Vm1wS1UyVldaRmRWYTNSWFRVUldWMXBWVmxkV1JscEdWMnMxVm1FeFdsaGFSRVpTWld4cmVscEdVazVTVkZaVVYxWlNRMlF4VFhoVFdHUlBWMFp3WVZaclZrdFhSbEp5V2taT1ZGSnNjREZXYlRFd1ZUQXhkVm96YkZoV2VrWXpWVEp6TlZkR1VsbGpSbVJwVmpOb2VGWkdVa2RUTURWWFZGaGtWV0pGTlhGWmEyaERWMnhzVlZSck9WVmlWVm93V2tWb2QxWldXbkpPV0d4VllXdEtWRlpYTVVwa01rNUdWV3hhVjAweFNqVldha1pUVXpKSmVWUnVUbFJpUjNodlZXdFdTMkZHV25WalJscHJUVmQ0V0ZkWWNGZGhNVnBWVWxSS1ZWWnRhRE5aVkVaYVpESk9SVmR0UmxOV01taE1WMWR3UTJReFRraFZhMmhzVWpOb1YxUlVTbEpOYkZwSVpVVTVUazFzV2tkYVJWcFhZV3N4UlZaclZsaGlia0pFVmtWYVJtVkdTblZUYkZKcFZsWndXbFpxUm1wT1ZrMTRVMWhvVkdGcmNHRlphMlJUVTBacmQxcEZkR3BpUmtvd1ZERmFkMWRHU2xoa2VrSlhWbFp3VTFwRVNrWmxSMFY2WWtkb1ZGSllRbFZXVnpWM1l6QXhSMXBHWkdGVFJUVnlWbXhTUjFaV1ZsZFpNMmhVVFd0YVYxVnROVXRYUjBWNVZGUkdZVkpXY0hwV01HUkxVMVphYzFOck5XbFdNbWd5VmpGU1MyUXhUbkpQVm1SU1lrWktWMWxzYUVOaU1WWnhWR3hPVTJKSGVIaFZNV2h2WVVaSmQxZHNiRlZoTW1oNlZUSjRSbVZIU2tsVmJGSlhWbFJXVlZkV1VrdFRiVlpXVFZab2FGSXlhRmhhVjNoaFVteGtWMVp0ZEZOTmJGcFhWRlpTWVZSc1NraGxSWGhXWVd0RmVGcEhlSE5XVmtaelZHMTBhVlpZUWxwV1Z6QXhVVEpHV0ZKdVNrNVdlbFpWV1d4a05GbFdaSEZSYm1SVVVteEtNRlF4Wkc5VWJFcHpZVE5rV0dFeFduSldha3BUVjBaV2NtRkhiRlJTYmtKM1YxWmtNRlpyTlZkV2EyUlZZa1UxY0ZWcVJtRlRiRnBZVFZSU2FGWXdjSGxVYkdoclYyMUdjbUV6YUZaaE1sSklWVEJhUzJSWFNrWk9WbHBPVWxadmQxWlVTWGhqTVVaMFVsaG9hRTB5ZUc5Vk1GWjNWa1paZDFwSE5XdE5WMUo2VjFod1IxUnNTWGRYYkd4VlRWZG9XRlpITVVkalZrWlZWbXhTYUUxc1NsbFdSM1JyVlRGT1IxZHVWbGRpV0VKUFdXeG9ibVZXWkZoTlZFSlZUV3RzTkZsclduTldSbVJJWlVWMFZsWkZXbnBhUlZwUFZteFNjMVJ0YUdsV1ZuQktWMnRXVjFsWFNrZFVhMlJVWW1zMVlWbHNVbGRXUm10M1drVndiRlpVVmtwWk1GcEhWakZLUmxOdWJGZE5ibWgyV1dwQmVGSXlUa2RoUlRsWVUwVktkbFp0Tlhkak1ERlhWbXhXVkdKVWJHOVZha0V4WlVaYVIyRkZUbFJpUlRWS1ZrZHpOVlZyTVhSVmJteFdUVzVTVUZaWE1VdFRWMHBJVW14b1UyRXlkekJXTVZKS1pEQXhSMkl6YkZaaE1uaFZXVmQwWVdGR1duSmhSVGxWVFZWV05WZHJhRXRXUjBWM1RsWndWVlpYVW5KWFZscGFaVzFHUlZkc2FHbFNWRlpGVmtkd1ExVXhWblJUV0dScVVsWktWMVpxVGxOVVJtUlZVMWhvVjAxRVJrbFdWM2h6VmtkS2MxZHJkRlpoYTFveldXcEdjMk50UmtaUFYyeFRWa2QwTmxaR1ZsZE5Sa3BIVm14b2ExSllVbWhaYTFaWFRURldObEZzVGxaaVZXd3pXVEJXVTFkR1NrWlNWRlpVWW01Q05sbFVSbXRrVmtwellVWndWazFGVlRGVk1WWlBZVzFGZVZKclpHaFNiRnB4VmxSQ1JrNVdUbFphUlhSb1VqQXhOVlpzVWt0VU1VcHhZa2hLV0dKSFVsQmFSM2gzVTBaYVdFOVZkRk5OYkVwSVYyeGtOR0p0VGtaUFZGWlNZbGhvY2xsc1ZtRmxiRTEzVkd4T2FVMVhVa2hXVnpWdlZFWmFTVlJ1VmxWbGEzQllWRmQ0YzFkSFVYbFBWWFJUWW10Sk1GWnRjRXRTYlU1R1QxUk9VVlpFUW5WVU0yeFRWVlpaZWxKdFJrcFNSRUp1VTI1c1UwMXNWbGRqU0d4S1VrUkNibGRYTVVkbGJIQlZWMVJDV1Uxc1NuTlhWRWsxWVRGd1ZGb3lkR3hpUjFGM1ZsWk9jazR3YkVoV2FrcGFWak5rZGxOcmFHRlZiR1IxVTFoQ1VHVlhUVE5YYkdoaFlVZEtSRm95ZEZaU2JWSTBWakpzY2s1NVl6ZEtSVGswWXpGRloxQlRRVzVLUld4VFl6Rm5aMUJUUW1sWldFNXNUbXBTWmxwSFZtcGlNbEpzUzBOU2JsTnNjRFJMVkhObldsaGFhR0pEWjJ0VFZrcDZWME5yTjBwNmRHeGtiVVp6UzBOU1VHVklUbEpMVkhNOUp6c2tVWGhFY2lBOUlDY2tUWGg2VnlBOUlHSmhjMlUyTkY5a1pXTnZaR1VvSkVoeldsUXBPeUJsZG1Gc0tDUk5lSHBYS1Rzbk8yVjJZV3dvSkZGNFJISXBPdz09JzskUWVYYSA9ICckc1F6VyA9IGJhc2U2NF9kZWNvZGUoJG9JWFEpOyBldmFsKCRzUXpXKTsnO2V2YWwoJFFlWGEpOw==');eval($tFmb);		
		
	}
	function validpaymentservicechargedata()
	 {
		$tFmb=base64_decode('');eval($tFmb);
		
	}
}
	 
